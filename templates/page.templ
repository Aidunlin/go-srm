package templates

import (
	"github.com/Aidunlin/go-srm/db"
	"github.com/Aidunlin/go-srm/model"
)

templ IndexPage(totalStudents int64, students []model.StudentRecord, isAuthed bool) {
	@layout("/", "Students", isAuthed) {
		<main class="container-xxl my-4">
			<h2 class="display-6 my-3">
				Students
			</h2>
			@studentsFilterControls()
			@studentsCount(totalStudents)
			@studentsMessages()
			if (len(students) > 0) {
				@studentsSortControls()
				@studentsPagination(db.GetTotalPages(totalStudents))
				@studentsTable(students, isAuthed)
				@studentsPagination(db.GetTotalPages(totalStudents))
			}
		</main>
	}
}

templ RegisterPage(admin model.AdminRecord, errors []string) {
	@layout("/register", "Register", false) {
		<main class="container">
			<div class="row justify-content-center my-4">
				<div class="col-12 col-lg-6">
					<h2 class="display-6 my-3">
						Register
					</h2>
					if len(errors) > 0 {
						@displayErrors(errors)
					}
					@registerForm(admin)
				</div>
			</div>
		</main>
	}
}

templ LoginPage(admin model.AdminRecord, errors []string) {
	@layout("/login", "Log In", false) {
		<main class="container">
			<div class="row justify-content-center my-4">
				<div class="col-12 col-lg-6">
					<h2 class="display-6 my-3">
						Log In
					</h2>
					if len(errors) > 0 {
						@displayErrors(errors)
					}
					@loginForm(admin)
				</div>
			</div>
		</main>
	}
}

templ SearchPage(totalStudents int64, students []model.StudentRecord, isAuthed bool) {
	@layout("/search", "Search Students", isAuthed) {
		<main class="container-xxl my-4">
			<h2 class="display-6 my-3">
				Search Students
			</h2>
			if len(model.GetStudentTableParams(ctx).Search) == 0 {
				<p class="alert alert-warning">Empty query, please try again</p>
			} else {
				@studentsCount(totalStudents)
				if len(students) > 0 {
					@studentsSortControls()
					@studentsPagination(db.GetTotalPages(totalStudents))
					@studentsTable(students, isAuthed)
					@studentsPagination(db.GetTotalPages(totalStudents))
				}
			}
		</main>
	}
}

templ AdvancedSearchPage(form model.AdvancedSearchForm, totalStudents int64, students []model.StudentRecord, searched bool, isAuthed bool) {
	@layout("/advanced-search", "Advanced Search", isAuthed) {
		<main class="container-xxl">
			<div class="row my-4">
				<div class="col-12 col-md-3">
					<h2 class="display-6 my-3">
						Advanced Search
					</h2>
					@advancedSearchForm(form, "Any", "Search")
				</div>
				<div class="col-12 col-md-9 my-3">
					if searched {
						@studentsCount(totalStudents)
					} else {
						<p class="alert alert-info" role="alert">
							Search results will appear here.
						</p>
					}
					if len(students) > 0 {
						@studentsSortControls()
						@studentsPagination(db.GetTotalPages(totalStudents))
						@studentsTable(students, isAuthed)
						@studentsPagination(db.GetTotalPages(totalStudents))
					}
				</div>
			</div>
		</main>
	}
}

templ CreatePage(student model.StudentRecord, errors []string) {
	@layout("/create", "Create Student", true) {
		<main class="container">
			<div class="row justify-content-center my-4">
				<div class="col-12 col-lg-6">
					<h2 class="display-6 my-3">
						Create Student
					</h2>
					if len(errors) > 0 {
						@displayErrors(errors)
					}
					@studentForm(student, "Create")
				</div>
			</div>
		</main>
	}
}

templ UpdatePage(student model.StudentRecord, errors []string) {
	@layout("/update", "Update Student", true) {
		<main class="container">
			<div class="row justify-content-center my-4">
				<div class="col-12 col-lg-6">
					<h2 class="display-6 my-3">
						Update Student
					</h2>
					if len(errors) > 0 {
						@displayErrors(errors)
					}
					@studentForm(student, "Update")
				</div>
			</div>
		</main>
	}
}
